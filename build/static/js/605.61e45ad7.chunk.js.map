{"version":3,"file":"static/js/605.61e45ad7.chunk.js","mappings":"4KAmFA,UA/E2B,WACvB,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAoDJ,EAAAA,EAAAA,YAApD,eAAOK,EAAP,KAA2BC,EAA3B,KACA,GAA8CN,EAAAA,EAAAA,UAAS,IAAvD,eAAOO,EAAP,KAAwBC,EAAxB,KACA,GAA4DR,EAAAA,EAAAA,YAA5D,eAAOS,EAAP,KAA+BC,EAA/B,KACA,GAA8BV,EAAAA,EAAAA,UAAS,MAAvC,eAAOW,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACNP,EAAsBH,EAAYW,QAAU,GAC5CJ,EAA0BP,IAAgBI,KAC3C,CAACJ,EAAaI,IA4BjB,OACI,gCACKI,IAAW,SAAC,IAAD,CAAaI,MAAOJ,EAAQI,MAAOJ,QAASA,EAAQA,QAASK,QAAS,kBAAMJ,EAAW,UACnG,iBAAKK,UAAU,eAAf,WACI,8DACA,+JACA,gBAAKA,UAAU,kBACf,iBAAKA,UAAU,WAAf,WACI,kBAAOC,QAAQ,OAAOD,UAAU,0BAAhC,oDACA,gBAAKA,UAAU,WAAf,UACI,kBAAOE,KAAK,WAAYF,UAAU,eAAiBG,GAAG,WAAWC,SAAU,SAACC,GAAD,OAAOpB,EAAYoB,EAAEC,OAAOC,gBAI/G,iBAAKP,UAAU,WAAf,WACI,kBAAOC,QAAQ,cAAcD,UAAU,0BAAvC,0CACA,iBAAKA,UAAU,WAAf,WACI,kBAAOE,KAAK,WAAWF,UAAS,uBAAkBZ,EAAqB,WAAa,cAAgBe,GAAG,cAAcC,SAAU,SAACC,GAAD,OAAOlB,EAAekB,EAAEC,OAAOC,WAC9J,gBAAKP,UAAU,mBAAf,6DAKR,iBAAKA,UAAU,WAAf,WACI,kBAAOC,QAAQ,kBAAkBD,UAAU,0BAA3C,kDACA,iBAAKA,UAAU,WAAf,WACI,kBAAOE,KAAK,WAAWF,UAAS,uBAAkBR,EAAyB,WAAa,cAAgBW,GAAG,kBAAkBC,SAAU,SAACC,GAAD,OAAOd,EAAmBc,EAAEC,OAAOC,WAC1K,gBAAKP,UAAU,mBAAf,iEAKR,gBAAKA,UAAU,kCAAf,UACI,mBAAQA,UAAU,iCAAiCQ,QA3D5C,WACnBb,EAAW,MACXc,IAAAA,IAAU,+DAAgE,CACtEzB,SAAAA,EACAE,YAAAA,GACD,CACCwB,SAAQ,UACH,eAAiBC,aAAaC,QAAQ,YAG1CC,MAAK,SAAUC,GACZC,QAAQC,IAAIF,GACZnB,EAAW,CACPG,MAAO,+BACPJ,QAAS,sCAGhBuB,OAAM,SAAUC,GACbH,QAAQC,IAAIE,GACZvB,EAAW,CACPG,MAAO,yBACPJ,QAASwB,EAAIJ,SAASK,WAsCsDC,UAAWhC,IAAuBI,EAA9G","sources":["components/ui/change-password-form/Change-password-form.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport CustomToast from \"../../shared/toast/Custom-toast\";\nimport axios from \"axios\";\n\nconst ChangePasswordForm = () => {\n    const [password, setPassword] = useState(\"\");\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [isNewPasswordValid, setIsNewPasswordValid] = useState();\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [isConfirmPasswordValid, setIsConfirmPasswordValid] = useState();\n    const [message, setMessage] = useState(null);\n\n    useEffect(() => {\n        setIsNewPasswordValid(newPassword.length >= 6);\n        setIsConfirmPasswordValid(newPassword === confirmPassword);\n    }, [newPassword, confirmPassword]);\n    \n    const changePassword = () => {\n        setMessage(null);\n        axios.put(\"https://shopee-nodejs.herokuapp.com/api/user/change-password\", {\n            password,\n            newPassword\n        }, {\n            headers: {\n                ['x-auth-token']: localStorage.getItem('token')\n            }\n        })\n            .then(function (response) {\n                console.log(response);\n                setMessage({\n                    title: \"Change password successfully\",\n                    message: \"Your password has been changed\"\n                });\n            })\n            .catch(function (err) {\n                console.log(err);\n                setMessage({\n                    title: \"Change password failed\",\n                    message: err.response.data\n                });\n            });\n    }\n    \n    return (\n        <>\n            {message && <CustomToast title={message.title} message={message.message} onClose={() => setMessage(null)}/>}\n            <div className=\"p-4 bg-white\">\n                <h5>Đổi mật khẩu</h5>\n                <p>Để bảo mật tài khoản, vui lòng không chia sẻ mật khẩu cho người khác</p>\n                <div className=\"divider mb-3\"/>\n                <div className=\"mb-3 row\">\n                    <label htmlFor=\"name\" className=\"col-sm-3 col-form-label\">Mật khẩu hiện tại</label>\n                    <div className=\"col-sm-9\">\n                        <input type=\"password\"  className=\"form-control\"   id=\"password\" onChange={(e) => setPassword(e.target.value)}/>\n                     \n                    </div>\n                </div>\n                <div className=\"mb-3 row\">\n                    <label htmlFor=\"newPassword\" className=\"col-sm-3 col-form-label\">Mật khẩu mới</label>\n                    <div className=\"col-sm-9\">\n                        <input type=\"password\" className={`form-control ${isNewPasswordValid ? \"is-valid\" : \"is-invalid\"}`} id=\"newPassword\" onChange={(e) => setNewPassword(e.target.value)}/>\n                        <div className=\"invalid-feedback\">\n                            Password must have at least 6 characters\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mb-3 row\">\n                    <label htmlFor=\"confirmPassword\" className=\"col-sm-3 col-form-label\">Xác nhận mật khẩu</label>\n                    <div className=\"col-sm-9\">\n                        <input type=\"password\" className={`form-control ${isConfirmPasswordValid ? \"is-valid\" : \"is-invalid\"}`} id=\"confirmPassword\" onChange={(e) => setConfirmPassword(e.target.value)}/>\n                        <div className=\"invalid-feedback\">\n                            Confirm password does not match new password\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mb-3 row justify-content-center\">\n                    <button className=\"btn bg-primary w-25 text-white\" onClick={changePassword} disabled={!isNewPasswordValid || !isConfirmPasswordValid}>Xác nhận</button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default ChangePasswordForm;\n"],"names":["useState","password","setPassword","newPassword","setNewPassword","isNewPasswordValid","setIsNewPasswordValid","confirmPassword","setConfirmPassword","isConfirmPasswordValid","setIsConfirmPasswordValid","message","setMessage","useEffect","length","title","onClose","className","htmlFor","type","id","onChange","e","target","value","onClick","axios","headers","localStorage","getItem","then","response","console","log","catch","err","data","disabled"],"sourceRoot":""}